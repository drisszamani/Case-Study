pipeline {
    agent any

    tools {
        jdk 'JDK 17'
        maven 'Maven_3.9.9'
    }

    environment {
        DOCKER_REGISTRY = 'docker.io/drisszamanii'
        VERSION = '1.0.0'
    }

    // Add verification stage at the beginning
    stages {
        stage('Verify Tools') {
            steps {
                sh '''
                    echo "Maven version:"
                    mvn -version
                    echo "Java version:"
                    java -version
                    echo "Maven home:"
                    echo $MAVEN_HOME
                '''
            }
        }

        // Rest of your stages remain the same
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Unit Tests') {
            steps {
                script {
                    sh 'mvn -version'
                    sh 'echo $JAVA_HOME'
                    sh 'echo $MAVEN_HOME'

                    ['car', 'client', 'gateway', 'server_eureka'].each { service ->
                        dir(service) {
                            sh 'mvn clean package -X'
                        }
                    }
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    dir('docker') {
                        ['car', 'client', 'gateway', 'eureka'].each { service ->
                            sh """
                                docker build -t ${DOCKER_REGISTRY}/${service}-service:${VERSION} \
                                    -f ${service}/Dockerfile ../${service == 'eureka' ? 'server_eureka' : service}
                            """
                        }
                    }
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials-id', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    }

                    ['car', 'client', 'gateway', 'eureka'].each { service ->
                        sh "docker push ${DOCKER_REGISTRY}/${service}-service:${VERSION}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh '''
                        kubectl apply -f k8s/services/namespace.yaml
                        kubectl apply -f k8s/services/configmap.yaml
                        kubectl apply -f k8s/services/secrets.yaml
                        kubectl apply -f k8s/deployments/
                        kubectl apply -f k8s/services/
                    '''
                }
            }
        }
    }
}